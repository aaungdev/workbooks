from jira import JIRA
import pandas as pd
import logging

# ---- 1. SETUP LOGGING ----
logging.basicConfig(level=logging.INFO)
LOGGER = logging.getLogger(__name__)

# ---- 2. CONFIGURATION ----
JIRA_BASE_URL = "https://your-domain.atlassian.net"      # üîÅ Replace this
JIRA_API_TOKEN = "your-api-token"                        # üîÅ Replace this
JIRA_USER_EMAIL = "your-email@example.com"               # üîÅ Replace this
JQL_QUERY = "project = DEMO ORDER BY created DESC"       # üîÅ Replace your JQL

# ---- 3. CONNECT TO JIRA ----
try:
    jira_client = JIRA(
        server=JIRA_BASE_URL,
        token_auth=JIRA_API_TOKEN,
        basic_auth=(JIRA_USER_EMAIL, JIRA_API_TOKEN),
        options={"server": JIRA_BASE_URL},
        verify=False  # ‚ö†Ô∏è Insecure, but needed for self-signed SSL
    )
    LOGGER.info("Connected to JIRA.")
except Exception as e:
    LOGGER.error(f"Failed to connect to JIRA: {e}")
    raise

# ---- 4. QUERY ISSUES ----
try:
    issues = jira_client.search_issues(
        JQL_QUERY,
        maxResults=50,
        fields="summary,status,assignee,customfield_10200,customfield_12277"
    )

    data = []
    for issue in issues:
        fields = issue.fields
        data.append({
            "Key": issue.key,
            "Summary": fields.summary,
            "Status": fields.status.name,
            "Assignee": fields.assignee.displayName if fields.assignee else "Unassigned",
            "Epic Link": getattr(fields, "customfield_10200", None),
            "Parent Link": getattr(fields, "customfield_12277", None),
        })

    # ---- 5. EXPORT TO EXCEL ----
    df = pd.DataFrame(data)
    df.to_excel("jira_export.xlsx", index=False)
    print("‚úÖ Exported JIRA issues to 'jira_export.xlsx'")

except Exception as e:
    LOGGER.error(f"Error fetching issues: {e}")